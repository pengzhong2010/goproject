syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package api.thinktank.v1;
option go_package = "goproject/api/thinktank/v1;v1";
option (gogoproto.goproto_getters_all) = false;

import "api/thinktank/v1/common.proto";

service Doc {
	rpc CreateDoc (CreateDocRequest) returns (UpdateResp) {
		option (google.api.http) = {
			post: "/doc/create",
			body: "*",
		};
	}
	rpc UpdateDoc (UpdateDocRequest) returns (UpdateResp) {
		option (google.api.http) = {
			put: "/doc/update",
			body: "*",
		};
	};
	rpc DeleteDoc (IDReq) returns (UpdateResp) {
		option (google.api.http) = {
			delete: "/doc/delete"
			body: "*",
		};
	};
	rpc GetDoc (IDReq) returns (GetDocReply) {
		option (google.api.http) = {
			get: "/doc/get"
		};
	};
	rpc ListDoc (ListDocRequest) returns (ListDocReply) {
		option (google.api.http) = {
			get: "/doc/list"
		};
	};
}

message CreateDocRequest {
	// title
	string title   = 1;
}

message UpdateDocRequest {
	// id
	int64  id     = 1;
	// title
	string title   = 2;
}

message GetDocReply {
	// id
	int64  id     = 1;
	// uuid
	string uuid   = 2;
	// 标题
	string title  = 3;
	// 创建时间
	int64  ctime  = 4;
	// 修改时间
	int64  mtime  = 5;
}

message ListDocRequest {
	// id
	int64 id          = 1;
	// 模糊搜索
	string key        = 2;
	// title
	string title      = 3;
	// 分页
	int64  page_size   = 4;
	// 分页
	int64  page_num    = 5;
	// 排序字段
	string orderby    = 6;
	// 排序顺序
	string asc        = 7;
	// 我的 0.全部 1.我的
	Mine mine         = 8;
}
message ListDocReply {
	repeated DocForList data  = 1;
	int64    count            = 2;
}
message DocForList {
	// id
	int64  id     = 1;
	// uuid
	string uuid   = 2;
	// 标题
	string title  = 3;
	// 创建时间
	int64  ctime  = 4;
	// 修改时间
	int64  mtime  = 5;
}